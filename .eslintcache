[{"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/index.js":"1","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/App.js":"2","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/reportWebVitals.js":"3","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/Router.js":"4","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/history.js":"5","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/WelcomeContainer.js":"6","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/HomeContainer.js":"7","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Happy/HappyContainer.js":"8","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/pc/PcWelcome.jsx":"9","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/mobile/MobileWelcome.jsx":"10","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHome.jsx":"11","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHome.jsx":"12","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Happy/pc/PcHappy.jsx":"13","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/constants.js":"14","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHomeContent.jsx":"15","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHomeCanvas.jsx":"16","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/pc/components/TextBtn.jsx":"17","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/texts/content-text.js":"18","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/constants.js":"19","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/PcHomeSection.jsx":"20","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/PcHomeFirst.jsx":"21","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/InteractionBarChart.jsx":"22","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/index.js":"23","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/index.js":"24","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/index.js":"25","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/constants.js":"26","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/data.js":"27","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Interaction.jsx":"28","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/BarChart.jsx":"29","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Scatter.jsx":"30","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/utils.js":"31","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/constants.js":"32","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Sliders.jsx":"33","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Remark/index.js":"34","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/InputSlider.jsx":"35","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/utils.js":"36","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Texts.jsx":"37","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Yaxis.jsx":"38","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Circles.jsx":"39","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Xaxis.jsx":"40","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Labels.jsx":"41","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/ValueLabels.jsx":"42","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Bars.jsx":"43","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Axis.jsx":"44","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Remark/Remark.jsx":"45","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/utils.js":"46","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/ValueLabels.jsx":"47","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Labels.jsx":"48","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Axis.jsx":"49","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Bars.jsx":"50","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeContent.jsx":"51","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeCanvas.jsx":"52","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/texts/content-text.js":"53","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/MobileHomeSection.jsx":"54","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/MobileHomeFirst.jsx":"55","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/InteractionBarChart.jsx":"56","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/constants.js":"57","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/utils.js":"58","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/constants.js":"59","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Axis.jsx":"60","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/index.js":"61","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Bars.jsx":"62","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/ValueLabels.jsx":"63","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Labels.jsx":"64","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/index.js":"65","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/BarChart.jsx":"66","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Scatter.jsx":"67","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Remark/Remark.jsx":"68","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/utils.js":"69","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/constants.js":"70","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/utils.js":"71","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Axis.jsx":"72","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Bars.jsx":"73","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Labels.jsx":"74","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/ValueLabels.jsx":"75","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Circles.jsx":"76","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Yaxis.jsx":"77","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Texts.jsx":"78","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Xaxis.jsx":"79","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Interaction.jsx":"80","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Sliders.jsx":"81","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/InputSlider.jsx":"82","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeScroller.jsx":"83","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Remark/RemarkTop.jsx":"84","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scrollCircle/ScrollCircle.jsx":"85","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/mobile/components/TextBtn.jsx":"86"},{"size":500,"mtime":1608164397520,"results":"87","hashOfConfig":"88"},{"size":265,"mtime":1608216280937,"results":"89","hashOfConfig":"88"},{"size":362,"mtime":1608029341701,"results":"90","hashOfConfig":"88"},{"size":1490,"mtime":1608216280938,"results":"91","hashOfConfig":"88"},{"size":88,"mtime":1608216280988,"results":"92","hashOfConfig":"88"},{"size":469,"mtime":1608216281029,"results":"93","hashOfConfig":"88"},{"size":614,"mtime":1608369811489,"results":"94","hashOfConfig":"88"},{"size":626,"mtime":1608369811488,"results":"95","hashOfConfig":"88"},{"size":1793,"mtime":1608369811500,"results":"96","hashOfConfig":"88"},{"size":1839,"mtime":1608370527363,"results":"97","hashOfConfig":"88"},{"size":3289,"mtime":1608216281017,"results":"98","hashOfConfig":"88"},{"size":3970,"mtime":1608369811490,"results":"99","hashOfConfig":"88"},{"size":15278,"mtime":1608369811488,"results":"100","hashOfConfig":"88"},{"size":583,"mtime":1608216280938,"results":"101","hashOfConfig":"88"},{"size":3804,"mtime":1608369811499,"results":"102","hashOfConfig":"88"},{"size":2576,"mtime":1608216281017,"results":"103","hashOfConfig":"88"},{"size":846,"mtime":1608216281030,"results":"104","hashOfConfig":"88"},{"size":5458,"mtime":1608216281029,"results":"105","hashOfConfig":"88"},{"size":776,"mtime":1608216281023,"results":"106","hashOfConfig":"88"},{"size":1248,"mtime":1608216281025,"results":"107","hashOfConfig":"88"},{"size":736,"mtime":1608369811500,"results":"108","hashOfConfig":"88"},{"size":2527,"mtime":1608216281021,"results":"109","hashOfConfig":"88"},{"size":55,"mtime":1608216281023,"results":"110","hashOfConfig":"88"},{"size":49,"mtime":1608216281027,"results":"111","hashOfConfig":"88"},{"size":48,"mtime":1608216281019,"results":"112","hashOfConfig":"88"},{"size":534,"mtime":1608216281019,"results":"113","hashOfConfig":"88"},{"size":11847,"mtime":1608216280938,"results":"114","hashOfConfig":"88"},{"size":2811,"mtime":1608369811500,"results":"115","hashOfConfig":"88"},{"size":2922,"mtime":1608216281018,"results":"116","hashOfConfig":"88"},{"size":4608,"mtime":1608216281026,"results":"117","hashOfConfig":"88"},{"size":1683,"mtime":1608216281028,"results":"118","hashOfConfig":"88"},{"size":465,"mtime":1608216281027,"results":"119","hashOfConfig":"88"},{"size":1009,"mtime":1608216281022,"results":"120","hashOfConfig":"88"},{"size":45,"mtime":1608216281025,"results":"121","hashOfConfig":"88"},{"size":8785,"mtime":1608369811499,"results":"122","hashOfConfig":"88"},{"size":3033,"mtime":1608216281020,"results":"123","hashOfConfig":"88"},{"size":1562,"mtime":1608216281026,"results":"124","hashOfConfig":"88"},{"size":629,"mtime":1608216281027,"results":"125","hashOfConfig":"88"},{"size":1592,"mtime":1608216281026,"results":"126","hashOfConfig":"88"},{"size":677,"mtime":1608216281027,"results":"127","hashOfConfig":"88"},{"size":1402,"mtime":1608216281018,"results":"128","hashOfConfig":"88"},{"size":1648,"mtime":1608216281019,"results":"129","hashOfConfig":"88"},{"size":1466,"mtime":1608216281018,"results":"130","hashOfConfig":"88"},{"size":638,"mtime":1608216281018,"results":"131","hashOfConfig":"88"},{"size":2616,"mtime":1608216281025,"results":"132","hashOfConfig":"88"},{"size":2769,"mtime":1608216281024,"results":"133","hashOfConfig":"88"},{"size":1508,"mtime":1608216281023,"results":"134","hashOfConfig":"88"},{"size":1277,"mtime":1608216281022,"results":"135","hashOfConfig":"88"},{"size":644,"mtime":1608216281020,"results":"136","hashOfConfig":"88"},{"size":1306,"mtime":1608216281020,"results":"137","hashOfConfig":"88"},{"size":865,"mtime":1608369811490,"results":"138","hashOfConfig":"88"},{"size":2675,"mtime":1608369811490,"results":"139","hashOfConfig":"88"},{"size":2302,"mtime":1608369811499,"results":"140","hashOfConfig":"88"},{"size":1336,"mtime":1608369811495,"results":"141","hashOfConfig":"88"},{"size":833,"mtime":1608369960897,"results":"142","hashOfConfig":"88"},{"size":2515,"mtime":1608369811494,"results":"143","hashOfConfig":"88"},{"size":776,"mtime":1608369811495,"results":"144","hashOfConfig":"88"},{"size":2769,"mtime":1608225162152,"results":"145","hashOfConfig":"88"},{"size":533,"mtime":1608369811492,"results":"146","hashOfConfig":"88"},{"size":644,"mtime":1608225162149,"results":"147","hashOfConfig":"88"},{"size":48,"mtime":1608225162148,"results":"148","hashOfConfig":"88"},{"size":1306,"mtime":1608225162149,"results":"149","hashOfConfig":"88"},{"size":1508,"mtime":1608369811495,"results":"150","hashOfConfig":"88"},{"size":1277,"mtime":1608369811494,"results":"151","hashOfConfig":"88"},{"size":49,"mtime":1608225162155,"results":"152","hashOfConfig":"88"},{"size":3219,"mtime":1608369811491,"results":"153","hashOfConfig":"88"},{"size":4703,"mtime":1608369811497,"results":"154","hashOfConfig":"88"},{"size":2658,"mtime":1608369811496,"results":"155","hashOfConfig":"88"},{"size":3033,"mtime":1608369811493,"results":"156","hashOfConfig":"88"},{"size":465,"mtime":1608369811498,"results":"157","hashOfConfig":"88"},{"size":1683,"mtime":1608225162156,"results":"158","hashOfConfig":"88"},{"size":638,"mtime":1608225162147,"results":"159","hashOfConfig":"88"},{"size":1466,"mtime":1608225162147,"results":"160","hashOfConfig":"88"},{"size":1402,"mtime":1608369811491,"results":"161","hashOfConfig":"88"},{"size":1648,"mtime":1608369811492,"results":"162","hashOfConfig":"88"},{"size":2417,"mtime":1608369811497,"results":"163","hashOfConfig":"88"},{"size":628,"mtime":1608369811498,"results":"164","hashOfConfig":"88"},{"size":1562,"mtime":1608225162154,"results":"165","hashOfConfig":"88"},{"size":654,"mtime":1608369811497,"results":"166","hashOfConfig":"88"},{"size":11048,"mtime":1608369811493,"results":"167","hashOfConfig":"88"},{"size":1009,"mtime":1608225162151,"results":"168","hashOfConfig":"88"},{"size":9488,"mtime":1608369811493,"results":"169","hashOfConfig":"88"},{"size":2913,"mtime":1608369811491,"results":"170","hashOfConfig":"88"},{"size":2694,"mtime":1608369811496,"results":"171","hashOfConfig":"88"},{"size":877,"mtime":1608369811498,"results":"172","hashOfConfig":"88"},{"size":716,"mtime":1608370265987,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"sqnrpk",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"176"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"176"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"176"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"176"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"176"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"176"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"176"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"176"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"176"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"176"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"176"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"176"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"176"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"176"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"176"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"176"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"176"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"176"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/index.js",[],["371","372"],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/App.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/reportWebVitals.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/Router.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/history.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/WelcomeContainer.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/HomeContainer.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Happy/HappyContainer.js",["373","374"],"import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { ThemeProvider } from '@material-ui/styles';\nimport happiness from '../../images/happiness.png';\nimport health from '../../images/health.png';\nimport security from '../../images/security.png';\nimport environment from '../../images/environment.png';\nimport economy from '../../images/economy.png';\nimport education from '../../images/education.png';\nimport relationship from '../../images/relationship.png';\nimport leisure from '../../images/leisure.png';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'NanumSquareRoundR'\n    ].join(','),\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '5%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: '80%',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nfunction PcHappy() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className={classes.root}>\n    <Grid container spacing={1}>\n      <Grid item xs={5}>\n        <div style={{\n          marginLeft: \"10%\",\n          width: '80%',\n          textAlign:'left',\n          fontFamily: \"NanumSquareRoundR\",\n          fontWeight: 'bold',\n          fontSize: '300%',\n          color: '#4770B3'\n        }}>\n            <p>\"행복\"이란?</p>\n        </div>\n        <div style={{\n          marginLeft: \"10%\",\n          width: '80%',\n          textAlign:'left',\n          fontFamily: \"NanumSquareRoundR\",\n          fontSize: '150%',\n          color: '##50AED3',\n          whiteSpace : \"pre-wrap\"\n        }}>\n            대한민국 전문가들이 정의한<br/>\n            오른쪽에 보이는 행복의 구성요소를<br/>\n            그 가중치에 따라 합한 숫자로 정의됩니다.<br/>\n            <br/>\n            <img src=\"http://www.happykorea.re.kr/about/img/about_img_1_1.gif\" width='100%'/>\n            <br/>\n            <img src={happiness} width='100%'/>\n        </div>\n      </Grid>\n      <Grid item xs={7}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={health} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\" fontFamily=\"NanumSquareRoundR\">\n                        1. 건강\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        주관적 건강수준 인지율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 정신건강증진기관 \u001d수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" fontFamily=\"NanumSquareRoundR\">\n                        인구 천명당 의료기관 종사 의사수\u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        건강생활실천율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 의료기관병상수                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.338</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={security} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        2. 안전\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        사회안전에 대한 인식                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 CCTV 대수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 응급의교기관 및 응급실 운영기관수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        단위면적당 지역경찰관서 수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        지역안전등급 현황 중 '교통사고 및 화재'                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.150</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={environment} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        3. 환경\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        환경체감도                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 1일 산업폐수 방류량\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        도시지역 중 '녹색지역 비율'\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        미세먼지(PM2.5)                 \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        주민 1인당 생활폐기물배출량\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.100</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={economy} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        4. 경제\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        1인당 지역내총생산(GRDP)                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 사업체수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 종사자수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        국민기초생활보장 수급자비율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        종사자 천명당 영세자영업자 수\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.168</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={education} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        5. 교육\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        학업성취도(기초학력미달)                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        교원 1인당 학생수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        영유아 천명당 보육시설 수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 학교수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 사설학원\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.098</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={relationship} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        6. 관계 및 사회참여\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 자살률                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        1인가구(독거노인 제외) 비율\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        독거노인가구 비율\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 사회적기업수          \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        가족관계 만족                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.080</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={leisure} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        7. 여가\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        여가활용 만족도\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        노인 천명당 노인여가복지시설수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 도서관수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 문화기반시설수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 체육관련 여가시설                 \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.056</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          </Grid>\n          </Grid>\n      </Grid>\n    </div>\n    </ThemeProvider>\n    );\n}\n\nexport default PcHappy;\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/pc/PcWelcome.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/mobile/MobileWelcome.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHome.jsx",["375"],"import React, {createContext, useCallback, useReducer, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport PcHomeContent from \"./PcHomeContent\";\nimport PcHomeCanvas from \"./PcHomeCanvas\";\nimport { UPDATE_INDEX } from '../../../constants';\nimport {\n    UPDATE_ECO,\n    UPDATE_EDU,\n    UPDATE_ENV, UPDATE_HBY,\n    UPDATE_HLT, UPDATE_INIT,\n    UPDATE_REL,\n    UPDATE_SAF\n} from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // backgroundColor: \"#AFECB0\",\n        paddingTop: \"2vh\",\n    },\n\n    wrapper: {\n        width: \"60vw\",\n        display: \"block\",\n        margin: \"0 auto\",\n        marginTop: \"5vh\",\n    },\n}));\n\nexport const IndexContext = createContext();\n\nconst initialIndex = -1;\n\nconst indexReducer = (state, action) => {\n    if (action.type === UPDATE_INDEX) {\n        return action.data\n    }\n};\n\nexport const InteractionContext = React.createContext();\n\nconst initialWeight = {\n    hlt: 7,\n    saf: 7,\n    env: 7,\n    eco: 7,\n    edu: 7,\n    rel: 7,\n    hby: 8,\n};\n\nconst weightReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_HLT:\n            return {\n                ...state,\n                hlt: action.data\n            };\n\n        case UPDATE_SAF:\n            return {\n                ...state,\n                saf: action.data\n            };\n\n        case UPDATE_ENV:\n            return {\n                ...state,\n                env: action.data\n            };\n\n        case UPDATE_ECO:\n            return {\n                ...state,\n                eco: action.data\n            };\n\n        case UPDATE_EDU:\n            return {\n                ...state,\n                edu: action.data\n            };\n\n        case UPDATE_REL:\n            return {\n                ...state,\n                rel: action.data\n            };\n\n        case UPDATE_HBY:\n            return {\n                ...state,\n                hby: action.data\n            };\n\n        case UPDATE_INIT:\n            return {\n                hlt: 7,\n                saf: 7,\n                env: 7,\n                eco: 7,\n                edu: 7,\n                rel: 7,\n                hby: 8,\n            };\n\n        default:\n            return initialWeight;\n    }\n};\n\nconst PcHome = () => {\n    const classes = useStyles();\n\n    const [indexState, indexDispatch] = useReducer(indexReducer, initialIndex);\n    const [weightState, weightDispatch] = useReducer(weightReducer, initialWeight);\n\n    const [ weight, setWeight ] = useState({\n        hlt: 7,\n        saf: 7,\n        env: 7,\n        eco: 7,\n        edu: 7,\n        rel: 7,\n        hby: 8,\n    });\n\n    const changeBarChartByWeight = useCallback((weight) => {\n        setWeight(weight);\n    });\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                <IndexContext.Provider value={{indexState, indexDispatch}}>\n                    <InteractionContext.Provider value={{weightState, weightDispatch}}>\n                        <PcHomeContent callback={changeBarChartByWeight}/>\n                        <PcHomeCanvas weight={weight}/>\n                    </InteractionContext.Provider>\n                </IndexContext.Provider>\n            </div>\n        </div>\n    )\n};\n\nexport default PcHome;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHome.jsx",["376"],"import React, {createContext, useCallback, useReducer, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport MobileHomeContent from \"./MobileHomeContent\";\nimport MobileHomeCanvas from \"./MobileHomeCanvas\";\nimport {\n    UPDATE_ECO,\n    UPDATE_EDU,\n    UPDATE_ENV,\n    UPDATE_HBY,\n    UPDATE_HLT,\n    UPDATE_INDEX, UPDATE_INIT,\n    UPDATE_REL,\n    UPDATE_SAF\n} from \"../../../constants\";\nimport MobileHomeScroller from \"./MobileHomeScroller\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // position: \"relative\",\n        // height: \"640px\",\n        height: `${window.innerHeight}`,\n        position: \"fixed\",\n    },\n\n    container: {\n        height: \"100vh\"\n    },\n\n    contentWrapper: {\n        width: \"100vw\",\n    },\n\n    canvasWrapper: {\n        width: \"100vw\",\n    },\n\n    scrollerWrapper: {\n        display: \"float\",\n        float: \"right\",\n        marginTop: \"15px\",\n    },\n}));\n\nexport const IndexContext = createContext();\n\nconst initialIndex = 0;\n\nconst indexReducer = (state, action) => {\n    if (action.type === UPDATE_INDEX) {\n        return action.data\n    }\n};\n\nexport const InteractionContext = React.createContext();\n\nconst initialWeight = {\n    hlt: 7,\n    saf: 7,\n    env: 7,\n    eco: 7,\n    edu: 7,\n    rel: 7,\n    hby: 8,\n};\n\nconst weightReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_HLT:\n            return {\n                ...state,\n                hlt: action.data\n            };\n\n        case UPDATE_SAF:\n            return {\n                ...state,\n                saf: action.data\n            };\n\n        case UPDATE_ENV:\n            return {\n                ...state,\n                env: action.data\n            };\n\n        case UPDATE_ECO:\n            return {\n                ...state,\n                eco: action.data\n            };\n\n        case UPDATE_EDU:\n            return {\n                ...state,\n                edu: action.data\n            };\n\n        case UPDATE_REL:\n            return {\n                ...state,\n                rel: action.data\n            };\n\n        case UPDATE_HBY:\n            return {\n                ...state,\n                hby: action.data\n            };\n\n        case UPDATE_INIT:\n            return {\n                hlt: 7,\n                saf: 7,\n                env: 7,\n                eco: 7,\n                edu: 7,\n                rel: 7,\n                hby: 8,\n            };\n\n        default:\n            return initialWeight;\n    }\n};\n\nconst MobileHome = () => {\n    const classes = useStyles();\n\n    const [indexState, indexDispatch] = useReducer(indexReducer, initialIndex);\n    const [weightState, weightDispatch] = useReducer(weightReducer, initialWeight);\n\n    const [ weight, setWeight ] = useState({\n        hlt: 7,\n        saf: 7,\n        env: 7,\n        eco: 7,\n        edu: 7,\n        rel: 7,\n        hby: 8,\n    });\n\n    const changeBarChartByWeight = useCallback((weight) => {\n        setWeight(weight);\n    });\n\n    return (\n\n            <IndexContext.Provider value={{indexState, indexDispatch}}>\n                <InteractionContext.Provider value={{weightState, weightDispatch}}>\n                    <div className={classes.root}>\n                        <div className={classes.container}>\n                            <div className={classes.contentWrapper}>\n                                <MobileHomeContent callback={changeBarChartByWeight}/>\n                            </div>\n                            <div className={classes.canvasWrapper}>\n                                <MobileHomeCanvas weight={weight}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.scrollerWrapper}>\n                        <MobileHomeScroller/>\n                    </div>\n                </InteractionContext.Provider>\n            </IndexContext.Provider>\n\n    )\n};\n\nexport default MobileHome;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Happy/pc/PcHappy.jsx",["377","378"],"import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { ThemeProvider } from '@material-ui/styles';\nimport happiness from '../../../images/happiness.png';\nimport health from '../../../images/health.png';\nimport security from '../../../images/security.png';\nimport environment from '../../../images/environment.png';\nimport economy from '../../../images/economy.png';\nimport education from '../../../images/education.png';\nimport relationship from '../../../images/relationship.png';\nimport leisure from '../../../images/leisure.png';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'NanumSquareRoundR'\n    ].join(','),\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '5%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: '80%',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nfunction PcHappy() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className={classes.root}>\n    <Grid container spacing={1}>\n      <Grid item xs={5}>\n        <div style={{\n          marginLeft: \"10%\",\n          width: '80%',\n          textAlign:'left',\n          fontFamily: \"NanumSquareRoundR\",\n          fontWeight: 'bold',\n          fontSize: '300%',\n          color: '#4770B3'\n        }}>\n            <p>\"행복\"이란?</p>\n        </div>\n        <div style={{\n          marginLeft: \"10%\",\n          width: '80%',\n          textAlign:'left',\n          fontFamily: \"NanumSquareRoundR\",\n          fontSize: '150%',\n          color: '##50AED3',\n          whiteSpace : \"pre-wrap\"\n        }}>\n            대한민국 전문가들이 정의한<br/>\n            오른쪽에 보이는 행복의 구성요소를<br/>\n            그 가중치에 따라 합한 숫자로 정의됩니다.<br/>\n            <br/>\n            <img src=\"http://www.happykorea.re.kr/about/img/about_img_1_1.gif\" width='100%'/>\n            <br/>\n            <img src={happiness} width='100%'/>\n        </div>\n      </Grid>\n      <Grid item xs={7}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={health} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\" fontFamily=\"NanumSquareRoundR\">\n                        1. 건강\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        주관적 건강수준 인지율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 정신건강증진기관 \u001d수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" fontFamily=\"NanumSquareRoundR\">\n                        인구 천명당 의료기관 종사 의사수\u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        건강생활실천율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 의료기관병상수                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.338</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={security} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        2. 안전\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        사회안전에 대한 인식                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 CCTV 대수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 응급의교기관 및 응급실 운영기관수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        단위면적당 지역경찰관서 수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        지역안전등급 현황 중 '교통사고 및 화재'                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.150</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={environment} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        3. 환경\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        환경체감도                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 1일 산업폐수 방류량\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        도시지역 중 '녹색지역 비율'\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        미세먼지(PM2.5)                 \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        주민 1인당 생활폐기물배출량\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.100</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={economy} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        4. 경제\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        1인당 지역내총생산(GRDP)                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 사업체수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 종사자수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        국민기초생활보장 수급자비율                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        종사자 천명당 영세자영업자 수\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.168</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={education} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        5. 교육\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        학업성취도(기초학력미달)                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        교원 1인당 학생수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        영유아 천명당 보육시설 수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 학교수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 사설학원\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.098</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={relationship} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        6. 관계 및 사회참여\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 자살률                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        1인가구(독거노인 제외) 비율\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        독거노인가구 비율\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 사회적기업수          \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        가족관계 만족                  \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.080</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img className={classes.img} alt=\"complex\" src={leisure} />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        7. 여가\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        여가활용 만족도\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        노인 천명당 노인여가복지시설수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 도서관수\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 십만명당 문화기반시설수                  \u001c\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        인구 천명당 체육관련 여가시설                 \u001c\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">가중치: 0.056</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          </Grid>\n          </Grid>\n      </Grid>\n    </div>\n    </ThemeProvider>\n    );\n}\n\nexport default PcHappy;\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHomeContent.jsx",["379","380","381","382","383","384","385"],"import React, {useEffect, useMemo, useCallback, useContext, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport PcHomeSection from './components/PcHomeSection';\nimport { titles, descriptions } from './texts/content-text';\nimport {IndexContext, InteractionContext} from './PcHome';\nimport * as d3 from 'd3';\nimport {UPDATE_INDEX} from \"../../../constants\";\nimport {Interaction} from \"./components/Interaction\";\nimport {UPDATE_INIT} from \"./components/Interaction/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        // backgroundColor: \"#45BD20\",\n        width: \"30vw\",\n        minWidth: \"470px\",\n        maxWidth: \"500px\",\n        height: \"500px\",\n        display: \"inline-block\",\n    },\n\n    wrapper: {\n        // backgroundColor: \"#123456\",\n        paddingTop: \"2vw\",\n        paddingLeft: \"1.5vw\",\n        paddingRight: \"1.5vw\",\n        marginBottom: \"300px\",\n    },\n\n    extra: {\n        height: \"300px\",\n    }\n}));\n\nlet container;\nlet sections;\nlet sectionPositions;\nlet currentIndex;\nlet containerStart;\n\nconst PcHomeContent = ({callback}) => {\n    const classes = useStyles();\n\n    const { indexState, indexDispatch } = useContext(IndexContext);\n\n    function resize() {\n        // sectionPositions will be each sections\n        // starting position relative to the top\n        // of the first section.\n        sectionPositions = [];\n        var startPos;\n        sections.each(function (d, i) {\n            var top = this.getBoundingClientRect().top;\n            if (i === 0) {\n                startPos = top;\n            }\n            sectionPositions.push(top - startPos);\n        });\n        containerStart = container.node().getBoundingClientRect().top + window.pageYOffset;\n    }\n\n    function position() {\n        var pos = window.pageYOffset - 10 - containerStart;\n        var sectionIndex = d3.bisect(sectionPositions, pos);\n        sectionIndex = Math.min(sections.size() - 1, sectionIndex);\n\n        // console.log(\"position\")\n        // console.log(\"current index:\", currentIndex)\n        // console.log(\"section index:\", sectionIndex)\n        if (currentIndex !== sectionIndex) {\n            // @v4 you now `.call` the indexDispatch callback\n            handleScroll(sectionIndex);\n            currentIndex = sectionIndex;\n        }\n    }\n\n    const handleScroll = useCallback((index) => {\n        d3.selectAll('.step')\n            .style('opacity', function (d, i) { return i === index ? 1 : 0.0; });\n        indexDispatch({type: UPDATE_INDEX, data: index})\n    }, []);\n\n    useEffect(() => {\n        container = d3.select('#section-wrapper');\n        sections = d3.selectAll('.step');\n        sectionPositions = [];\n        currentIndex = -1;\n        containerStart = 0;\n    }, []);\n\n    useEffect(() => {\n        resize();\n        position();\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('mousewheel', position);\n        window.addEventListener('resize', resize);\n\n        return () => {\n            window.removeEventListener('mousewheel', position);\n            window.removeEventListener('resize', resize);\n        };\n    });\n\n    const sectionsContent = useMemo(() => {\n        return titles.filter((d, i) => {return i < titles.length - 1}).map((t, i) => <PcHomeSection key={i} title={t} descriptions={descriptions[i]} isInter=\"0\"/>)\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.wrapper} id=\"section-wrapper\">\n                {sectionsContent}\n                <PcHomeSection key={titles.length - 1} title={titles[titles.length - 1]} descriptions={descriptions[titles.length - 1]} isInter=\"1\" callback={callback} />\n            </div>\n\n            <div className={classes.extra}> </div>\n        </div>\n    )\n};\n\nexport default PcHomeContent;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/PcHomeCanvas.jsx",["386"],"import React, { useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { IndexContext } from './PcHome';\nimport { BarChart } from './components/BarChart'\nimport { Scatter } from \"./components/scatter\";\nimport InteractionBarChart from \"./components/Interaction/InteractionBarChart\";\nimport {\n    PRICE_BAR,\n    HAPPY_BAR,\n    ECO_SCATTER,\n    EDU_SCATTER,\n    ENV_SCATTER,\n    HLT_SCATTER,\n    HBY_SCATTER,\n    REL_SCATTER,\n    SAF_SCATTER,\n    INTERACTION,\n} from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"700px\",\n        display: \"inline-block\",\n        position: \"fixed\",\n\n        '&::before': {\n            content: '\"\"',\n            display: 'block',\n            paddingTop: '100%',\n        }\n    },\n\n    graphic: {\n        // backgroundColor: \"#112295\",\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n\n}));\n\nconst PcHomeCanvas = ({weight}) => {\n    const classes = useStyles();\n\n    const { indexState, indexDispatch } = useContext(IndexContext);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.graphic}>\n                {(function () {\n                    switch (indexState) {\n                        // 여기에 스크립트 순서에 맞게 보여주고 싶은 컴포넌트를 넣으시면 됩니다.\n                        case 0:\n                            // src/components/BarChart 안에 BarChart.jsx 로 찾아가주세요\n                            // return (<Welcome/>);\n                            return (<p>Welcome</p>);\n\n                        case PRICE_BAR: // BarChart - House Price\n                        case HAPPY_BAR: // BarChart - House Price => Happiness\n                            return (<BarChart index={indexState}/>);\n\n                        case ECO_SCATTER: // 여가지수 - 집값\n                        case EDU_SCATTER: // 안전\n                        case ENV_SCATTER: // 교육\n                        case HLT_SCATTER: // 관계\n                        case HBY_SCATTER: //\n                        case REL_SCATTER:\n                        case SAF_SCATTER:\n                            return (<Scatter index={indexState}/>);\n                        case INTERACTION:\n                            return (<InteractionBarChart weight={weight}/>);\n                        default:\n                            return (<p></p>);\n                    }\n                })()}\n            </div>\n        </div>\n    )\n};\n\nexport default PcHomeCanvas;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/pc/components/TextBtn.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/texts/content-text.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/PcHomeSection.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/PcHomeFirst.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/InteractionBarChart.jsx",["387"],"import * as d3 from 'd3';\nimport { height, duration, x } from './constants';\nimport React, { useEffect, useMemo} from \"react\";\nimport Bars from \"./Bars\";\nimport Axis from \"./Axis\";\nimport Labels from \"./Labels\";\nimport ValueLabels from \"./ValueLabels\";\nimport { createInteractionDataset, createColorScale } from \"./utils\";\nimport {Remark} from \"../Remark\";\nimport { priceData } from '../../../../../data';\nimport {makeStyles} from \"@material-ui/core\";\nimport {width} from \"../BarChart/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        position: 'relative',\n    },\n\n    interBarSvg: {\n        width: `${width}px`,\n        height: `${height}px`,\n    },\n\n    unit: {\n        fontSize:'0.5rem',\n        float:'right',\n        transform:'translate(0px, 0px)'\n    }\n\n}));\n\nconst InteractionBarChart = ({weight}) => {\n\n    const classes = useStyles();\n\n    const color = useMemo(() => createColorScale(priceData), []);\n\n    const result = useMemo(() => createInteractionDataset(priceData, weight), [weight]);\n\n    useEffect(() => {\n\n        const svg = d3.select('#inter-barchart-svg');\n\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        const updateBars = Bars(svg, color);\n        const updateAxis = Axis(svg);\n        const updateLabels = Labels(svg);\n        const updateValueLabels = ValueLabels(svg);\n\n        result.then((dataObject)=> {\n\n            const {keyFrames} = dataObject;\n\n            console.log(\"happy:\", keyFrames);\n            console.log(\"happy:\", keyFrames[0][1][0].happy);\n\n            x.domain([0, keyFrames[0][1][0].happy]);\n\n            const happyKeyFrame = keyFrames[0];\n            updateAxis(happyKeyFrame, transition);\n            updateBars(happyKeyFrame, transition);\n            updateLabels(happyKeyFrame, transition);\n            updateValueLabels(happyKeyFrame, transition);\n\n        }, (err) => console.log(err))\n    }, [weight]);\n\n    return (\n        <div className={classes.wrapper} id=\"inter-barchart-wrapper\">\n            <div className={classes.unit} id=\"inter-barchart-unit\">행복지수 (0~100)</div>\n            <svg className={classes.interBarSvg} id=\"inter-barchart-svg\">\n                <g id=\"inter-barchart-axis-g\"></g>\n                <g id=\"inter-barchart-bar-g\"></g>\n                <g id=\"inter-barchart-label-g\"></g>\n                <g id=\"inter-barchart-value-label-g\"></g>\n            </svg>\n            <Remark/>\n        </div>\n\n    )\n};\n\nexport default InteractionBarChart;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/data.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Interaction.jsx",["388","389","390"],"import React, {useContext, useReducer} from \"react\";\nimport * as d3 from \"d3\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Sliders from './Sliders';\nimport Button from '@material-ui/core/Button';\nimport {IndexContext, InteractionContext} from \"../../PcHome\";\nimport {UPDATE_INIT} from \"./constants\";\n\n\nconst useStyles = makeStyles(theme => ({  // style 요소 선언\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    buttonWrapper: {\n        position: 'relative',\n    },\n\n    totalP: {\n        display: 'inline',\n        fontSize: '20px',\n        fontWeight: '700',\n        width: '30%',\n    },\n\n    sendButton: {\n        fontFamily: 'NanumSquareRoundR',\n        width: '30%',\n        borderColor: '#4770B3',\n        backgroundColor: '#ffffff',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        color: '#4770B3'\n    },\n    initButton: {\n        fontFamily: 'NanumSquareRoundR',\n        width: '30%',\n        borderColor: '#4770B3',\n        backgroundColor: '#ffffff',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        marginLeft:'30px',\n        marginRight: '60px',\n        color: '#4770B3'\n    }\n}));\n\nconst Interaction = ({callback}) => {\n\n    const classes = useStyles();\n\n    const { weightState, weightDispatch } = useContext(InteractionContext);\n\n    const send = (event) => {\n\n        // const total = weightState.hlt + weightState.saf + weightState.env + weightState.eco + weightState.edu + weightState.rel + weightState.hby;\n        callback(weightState);\n        // if (d3.format('0.2f')(total) === '1.00') {\n        // if ((total) === '50') {\n        //     callback(weightState)\n        // } else {\n        //     alert(\"합이 50이 되어야 합니다.\")\n        // }\n    };\n\n    const initialize = (event) => {\n        weightDispatch({type: UPDATE_INIT, data: ''});\n    };\n\n    return (\n        <div className={classes.wrapper} id=\"slider-wrapper\">\n            <Sliders/>\n\n            <div className={classes.buttonWrapper} id=\"slider-button-wrapper\">\n                {/*<p className={classes.totalP}>{d3.format('d')(weightState.hlt + weightState.saf + weightState.env + weightState.eco + weightState.edu + weightState.rel + weightState.hby)}</p>*/}\n                <Button\n                    className={classes.initButton}\n                    onClick={initialize}\n                    color='#4770B3'>\n                    초기화\n                </Button>\n                <Button\n                    className={classes.sendButton}\n                    onClick={send}>\n                    적용하기\n                </Button>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Interaction;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/BarChart.jsx",["391"],"import React, {useEffect, useMemo} from 'react';\nimport * as d3 from 'd3';\nimport { makeStyles } from \"@material-ui/core\";\n\nimport Bars from './Bars';\nimport Axis from './Axis';\nimport Labels from './Labels';\nimport ValueLabels from './ValueLabels';\n\nimport { width, height, duration, x } from './constants';\nimport { createDataset, createColorScale } from './utils';\nimport { priceData, happyData } from '../../../../../data';\nimport { Remark } from '../Remark';\n\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        position: 'relative',\n    },\n\n    barSvg: {\n        width: `${width}px`,\n        height: `${height}px`,\n    },\n\n    unit: {\n        fontSize:'0.5rem',\n        float:'right',\n        transform:'translate(0px, 15px)'\n    }\n\n}));\n\nconst BarChart = ({index}) => {\n\n    const classes = useStyles();\n\n    const result = useMemo(() => createDataset(priceData, happyData),[]);\n    const color = useMemo(() => createColorScale(priceData), []);\n\n    useEffect(() => {\n        const svg = d3.select('#barchart-svg');\n\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        const updateBars = Bars(svg, index, color);\n        const updateAxis = Axis(svg);\n        const updateLabels = Labels(svg, index);\n        const updateValueLabels = ValueLabels(svg, index);\n\n        result.then((dataObject)=> {\n\n            const { keyFrames, prev, next } = dataObject;\n\n            if (index === 1) {\n                x.domain([0, keyFrames[0][1][0].value]);\n\n                const priceKeyFrame = keyFrames[0];\n                updateAxis(priceKeyFrame, transition);\n                updateBars(priceKeyFrame, transition, prev, next);\n                updateLabels(priceKeyFrame, transition, prev, next);\n                updateValueLabels(priceKeyFrame, transition, prev, next);\n\n            } else {\n                x.domain([0, keyFrames[keyFrames.length-1][1][0].value]);\n\n                for (const keyframe of keyFrames) {\n                    updateAxis(keyframe, transition);\n                    updateBars(keyframe, transition, prev, next);\n                    updateLabels(keyframe, transition, prev, next);\n                    updateValueLabels(keyframe, transition, prev, next);\n\n                }\n            }\n\n\n        }, (err) => console.log(err))\n    }, [index]);\n\n    return (\n        <div className={classes.wrapper} id=\"barchart-wrapper\">\n            <div className={classes.unit} id=\"barchart-unit\">{index === 1 ? '(단위: 천만원)' : '행복지수 (0~100)'}</div>\n            <svg className={classes.barSvg} id=\"barchart-svg\">\n                <g id=\"barchart-axis-g\"></g>\n                <g id=\"barchart-bar-g\"></g>\n                <g id=\"barchart-label-g\"></g>\n                <g id=\"barchart-value-label-g\"></g>\n            </svg>\n            <Remark id=\"barchart-remark\"/>\n        </div>\n\n    )\n};\n\nexport default BarChart;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Scatter.jsx",["392","393","394"],"import React, {useEffect, useMemo} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport * as d3 from \"d3\";\n\nimport Xaxis from \"./Xaxis\";\nimport Yaxis from \"./Yaxis\";\nimport Circles from \"./Circles\";\nimport Texts from \"./Texts\";\n\nimport {y, margin, width, height, duration} from './constants';\nimport { createDataset, createColorScale } from './utils';\nimport { priceData } from '../../../../../data';\nimport { Remark } from '../Remark';\n\nimport {\n    ECO_SCATTER,\n    EDU_SCATTER,\n    ENV_SCATTER,\n    HBY_SCATTER,\n    HLT_SCATTER,\n    REL_SCATTER,\n    SAF_SCATTER\n} from \"../../../../../constants\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        position: 'absolute',\n    },\n\n    scatterSvg : {\n        width: `${width + margin.left + margin.right}px`,\n        height: `${height + margin.top + margin.bottom}px`,\n    },\n\n    unit: {\n        fontSize:'0.5rem',\n        transform:'translate(280px, 5px)'\n    },\n\n    x_unit: {\n        fontSize:'0.5rem',\n        float:'right',\n        transform:'translate(-40px, -380px)'\n    }\n\n}));\n\n\nconst Scatter = ({index}) => {\n\n    const classes = useStyles();\n\n    const result = useMemo(() => createDataset(priceData),[]);\n    const color = useMemo(() => createColorScale(priceData), []);\n\n    let getXUnit = useMemo(() => {\n        switch (index) {\n            case HLT_SCATTER:\n                return '건강 지수 (0~1)';\n            case SAF_SCATTER:\n                return '안전 지수 (0~1)';\n            case ENV_SCATTER:\n                return '환경 지수 (0~1)';\n            case ECO_SCATTER:\n                return '경제 지수 (0~1)';\n            case EDU_SCATTER:\n                return '교육 지수 (0~1)';\n            case REL_SCATTER:\n                return '관계 지수 (0~1)';\n            case HBY_SCATTER:\n                return '여가 지수 (0~1)';\n        }\n    }, [index]);\n\n    useEffect(() => {\n\n        const svg = d3.select('svg#scatter-svg');\n\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        result.then((dataObject) => {\n\n            y.domain([dataObject.priceMin, dataObject.priceMax]);\n\n            const updateXaxis = Xaxis(svg);\n            const updateYaxis = Yaxis(svg);\n            const updateCircles = Circles(svg, color);\n            const updateTexts = Texts(svg);\n\n            let indexData = [];\n            switch (index) {\n                case ECO_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.eco}});\n                    break;\n                case EDU_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.edu}});\n                    break;\n                case ENV_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.env}});\n                    break;\n                case HLT_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.health}});\n                    break;\n                case HBY_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.hobby}});\n                    break;\n                case REL_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.relation}});\n                    break;\n                case SAF_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.safe}});\n                    break;\n            }\n            updateXaxis(null, transition);\n            updateYaxis(null, transition);\n            updateCircles(indexData, transition);\n            updateTexts(indexData, transition);\n        });\n    }, [index]);\n\n    return (\n        <div className={classes.wrapper} id=\"scatter-wrapper\">\n            <div className={classes.unit} id=\"scatter-unit\">(단위: 천만원)</div>\n            <svg className={classes.scatterSvg} id=\"scatter-svg\">\n                <g id=\"scatter-x-axis-g\"></g>\n                <g id=\"scatter-y-axis-g\"></g>\n                <g id=\"scatter-circles-g\"></g>\n                <g id=\"scatter-texts-g\"></g>\n            </svg>\n            <div className={classes.x_unit} id=\"scatter-x-unit\">{getXUnit}</div>\n            <Remark/>\n        </div>\n\n    )\n};\n\nexport default Scatter;\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/utils.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Sliders.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Remark/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/InputSlider.jsx",["395","396","397","398","399","400","401","402","403"],"import React, {useContext, useState} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport {InteractionContext} from \"../../PcHome\";\nimport {UPDATE_ECO, UPDATE_EDU, UPDATE_ENV, UPDATE_HBY, UPDATE_HLT, UPDATE_REL, UPDATE_SAF} from \"./constants\";\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n\n    category: {\n        clear: 'both',\n        position: 'relative',\n        paddingBottom: '25px',\n        marginBottom: '25px',\n        borderBottom: '1px solid #ddd',\n        width: '100%',\n        height: '350',\n    },\n\n    section: {\n        position: 'relative',\n        float: 'left',\n        width: 220 + theme.spacing(3) * 3,\n        marginRight: '10px',\n    },\n\n    title: {\n        fontFamily: 'NanumSquareRoundR',\n        fontSize: '25px',\n        lineHeight: '21px',\n        color: '#333',\n        fontWeight: '700',\n        marginBottom: '10px',\n        display: 'block',\n    },\n\n    descriptionWrapper: {\n        width: '350px',\n        position: 'relative',\n        display: 'flex',\n    },\n\n    description: {\n        fontFamily: 'NanumSquareRoundR',\n        width: '90%',\n        fontSize: '13px',\n    },\n\n    subDescription: {\n        fontFamily: 'NanumSquareRoundR',\n        fontSize: '10px',\n        color: '#444448',\n    },\n\n    expandButton: {\n        position: 'relative',\n        width: '5%',\n        height: '10px',\n    },\n\n    wrapper: {\n        width: 200 + theme.spacing(3) * 3,\n        position: 'absolute',\n        float: 'right',\n        marginTop: '0',\n        marginLeft: '70px',\n        display: 'flex',\n        flexDirection: 'row',\n        paddingBottom: '5px',\n    },\n\n    slider: {\n        width: '86%',\n        marginRight: '20px',\n    },\n\n    sliderText: {\n        fontSize: '15px',\n        float: 'right',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        paddingTop: '5px',\n    }\n}));\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: '#4770B3',\n        height: 8,\n    },\n    thumb: {\n        height: 20,\n        width: 20,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n\n})(Slider);\n\nconst getTitle = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return '건강';\n\n        case UPDATE_SAF:\n            return '안전';\n\n        case UPDATE_ENV:\n            return '환경';\n\n        case UPDATE_ECO:\n            return '경제';\n\n        case UPDATE_EDU:\n            return '교육';\n\n        case UPDATE_REL:\n            return '관계';\n\n        case UPDATE_HBY:\n            return '여가';\n    }\n};\n\nconst getDescription = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return '좋은 신체 건강 상태를 유지하면서 평균기대수명까지 삶을 영위할 수 있을 것';\n\n        case UPDATE_SAF:\n            return '각종 폭력 및 위험(강도, 사고, 재난)에서 보호 받을 수 있으며 응급진료 접근성이 있을 것';\n\n        case UPDATE_ENV:\n            return '맑고 풍족한 물과 깨끗한 공기를 마시며  살아 갈 수 있을 것';\n\n        case UPDATE_ECO:\n            return '직업을 가지고 빈곤하지 않게  살아 갈 수 있을 것';\n\n        case UPDATE_EDU:\n            return '이성적으로 사고하고 판단할 수 있고 종교, 문학,  음악 등 \\b\\b\\b\\b 원하는 것을 배우고 표현하는데  있어서 제약이 없을 것';\n\n        case UPDATE_REL:\n            return '다른 사람들에게 신뢰받고 존중받으며, 이웃, 나아가  조직 \\b\\b 및 사회 내 사람들과 함께 상호작용할 수 있을 것';\n\n        case UPDATE_HBY:\n            return '일상에서 여유와 웃음을 갖고 문화적 삶을 향유하며 즐거운 시간을 보낼 수 있을 것';\n    }\n};\n\nconst getSubDescription = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return ['주관적 건강수준 인지율',\n                '인구 십만명당 정신건강증진기관 수',\n                '인구 천명당 의료기관 종사 의사수',\n                '건강생활실천율',\n                '인구 천명당 의료기관병상수'];\n\n        case UPDATE_SAF:\n            return ['사회 안전에 대한 인식',\n            '인구 천명당 cctv 대수',\n            '인구 십만명당 응급의료기관 및 응급실 운영기관수',\n            '단위면적당 지역경찰관서 수',\n            '지역안전등급 현황 중 \\'교통사고 및 화재\\''];\n\n        case UPDATE_ENV:\n            return [\n                '환경체감도',\n            '인구 천명당 1일 산업폐수 방류량',\n            '도시지역 중 \\'녹지지역 비율\\'',\n            '미세먼지(PM2.5)',\n            '주민 1인당 생활폐기물배출량'];\n\n        case UPDATE_ECO:\n            return [\n                '1인당 지역내총생산(GRDP)',\n                '인구 천명당 사업체수',\n                '인구 천명당 종사자수',\n                '국민기초생활보장 수급자비율',\n                '종사자 천명당 영세자영업자 수'\n            ];\n\n        case UPDATE_EDU:\n            return [\n                '학업성취도(기초학력미달)',\n            '교원 1인당 학생수',\n            '영유아 천명당 보육시설 수',\n            '인구 십만명당 학교수',\n            '인구 천명당 사설학원수'];\n\n        case UPDATE_REL:\n            return [\n                '인구 십만명당 자살률',\n            '1인가구(독거노인 제외) 비율 a)',\n            '독거노인가구 비율',\n            '인구 십만명당 사회적기업 수',\n            '가족관계 만족도'];\n\n        case UPDATE_HBY:\n            return [\n                '여가활용 만족도',\n            '노인 천명당 노인여가복지시설 수',\n            '인구 십만명당 도서관 수',\n            '인구 십만명당 문화기반시설 수',\n            '인구 천명당 체육관련 여가시설 수'];\n    }\n};\n\nconst InputSlider = ({selection}) => {\n\n    const classes = useStyles();\n\n    const {weightState, weightDispatch} = useContext(InteractionContext);\n\n    const [visibility, setVisibility] = useState(false);\n\n    const handleVisibility = (e) => {\n        setVisibility(!visibility)\n    };\n\n    const getState = (type) => {\n        switch (type) {\n            case UPDATE_HLT:\n                return weightState.hlt;\n\n            case UPDATE_SAF:\n                return weightState.saf;\n\n            case UPDATE_ENV:\n                return weightState.env;\n\n            case UPDATE_ECO:\n                return weightState.eco;\n\n            case UPDATE_EDU:\n                return weightState.edu;\n\n            case UPDATE_REL:\n                return weightState.rel;\n\n            case UPDATE_HBY:\n                return weightState.hby;\n        }\n    };\n\n    const handleSliderChange = (event, newValue, type) => {\n        weightDispatch({ type: type, data: newValue})\n    };\n\n    return (\n        <div className={classes.category}>\n            <div className={classes.section}>\n                <div\n                    className={classes.title}>\n                    {getTitle(selection)}\n                </div>\n\n                <div className={classes.descriptionWrapper}>\n                    <div className={classes.description}>\n                        {getDescription(selection)}\n                    </div>\n\n                    <IconButton className={classes.expandButton}\n                        onClick={handleVisibility}>\n                        <ExpandMoreIcon color='#444448'/>\n                    </IconButton>\n\n                </div>\n\n                { visibility ?\n                    <div className={classes.subDescription}>\n                        <p>{getSubDescription(selection)[0]}</p>\n                        <p>{getSubDescription(selection)[1]}</p>\n                        <p>{getSubDescription(selection)[2]}</p>\n                        <p>{getSubDescription(selection)[3]}</p>\n                        <p>{getSubDescription(selection)[4]}</p>\n                    </div> :\n                    null\n                }\n            </div>\n\n            <div className={classes.wrapper}>\n\n                <PrettoSlider\n                    className={classes.slider}\n                    value={typeof getState(selection) === 'number' ? getState(selection) : 0}\n                    onChange={(event, value) => handleSliderChange(event, value, selection)}\n                    valueLabelDisplay=\"off\"\n                    aria-label=\"pretto slider\"\n                    aria-valuemin={0}\n                    aria-valuemax={10}\n                    min={0}\n                    max={10}\n                    step={1}\n                />\n                <Typography className={classes.sliderText}>\n                    {typeof getState(selection) === 'number' ? getState(selection) : 0}\n                </Typography>\n            </div>\n        </div>\n    )\n};\n\nexport default InputSlider;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/utils.js",["404"],"import * as d3 from 'd3';\nimport { n, k } from './constants';\n\nexport const createDataset = async (priceData, happyData) => {\n\n    // Bar Chart\n    const dateValues = await makeDateValues(priceData, happyData);\n    const names = await makeNames(priceData);\n    const ranks = await makeRanks(names);\n    const keyFrames = await makeKeyFrames(dateValues, ranks);\n    const nameFrames = await makeNameFrames(keyFrames);\n    const prev = await makePrev(nameFrames);\n    const next = await makeNext(nameFrames);\n\n    return ({\n        keyFrames: keyFrames,\n        prev: prev,\n        next: next,\n    });\n};\n\n/**\n * Related to Bar Chart\n */\n\nconst makeDateValues = (priceData, happyData) => {\n    const totalData = Array.from(d3.rollup(priceData, ([d]) => d.value, d => d.date, d => d.name)).concat(\n        Array.from(d3.rollup(happyData, ([d]) => d.value, d => d.date, d => d.name))\n    );\n\n    return(\n        totalData\n            .map(([date, data]) => [new Date(date), data])\n            .sort(([a], [b]) => d3.ascending(a, b))\n    );\n};\n\nconst makeNames = (priceData) => {\n    return new Set(priceData.map(d => d.name))\n};\n\nconst makeRanks = (names) => {\n    var rank = value => {\n        const data = Array.from(names, name => ({name, value: value(name)}));\n        data.sort((a, b) => d3.descending(a.value, b.value));\n        for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n        return data;\n    };\n    return rank;\n};\n\nconst makeKeyFrames = (dateValues, rank) => {\n\n    const keyframes = [];\n    let ka, a, kb, b;\n\n    for ([[ka, a], [kb, b]] of d3.pairs(dateValues)) {\n\n        for (let i = 0; i < k; ++i) {\n            const t = i / k;\n            keyframes.push([\n                new Date(ka * (1 - t) + kb * t),\n\n                rank(name => (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t)\n            ]);\n        }\n    }\n    keyframes.push([new Date(kb), rank(name => b.get(name) || 0)]);\n    return keyframes;\n};\n\nconst makeNameFrames = (keyframes) => {\n    return d3.groups(keyframes.flatMap(([, data]) => data), d => d.name)\n};\n\nconst makePrev = (nameFrames) => {\n    return new Map(nameFrames.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])))\n};\n\nconst makeNext = (nameFrames) => {\n    return new Map(nameFrames.flatMap(([, data]) => d3.pairs(data)))\n};\n\n\nexport var textTween = (a, b) => {\n    const formatNumber = d3.format(\".2f\");\n    const i = d3.interpolateNumber(a, b);\n\n    return function(t) {\n        this.textContent = formatNumber(i(t));\n    };\n};\n\nexport var createColorScale = (data) => {\n\n    const colors = ['#4770B3','#50AED3', '#9E9EA2','#fc9595', '#fe5050'];\n\n    const scale = d3.scaleOrdinal()\n        .domain(['area-1', 'area-2', 'area-3', 'area-4', 'area-5'])\n        .range(colors);\n\n    if (data.some(d => d.category !== undefined)) {\n        const categoryByName = new Map(data.map(d => [d.name, d.category]));\n        scale.domain(categoryByName.values());\n        return d => scale(categoryByName.get(d.name));\n    }\n\n    return d => scale(d.name);\n};\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Texts.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Yaxis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Circles.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/scatter/Xaxis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Labels.jsx",["405"],"import { n, x, y } from './constants';\nimport { textTween } from \"./utils\";\n\nconst Labels = (svg, index) => {\n\n    let label = svg.select(\"#barchart-label-g\")\n        .attr('font-style', 'normal')\n        .attr('font-weight', '600')\n        .attr('font-size', '0.7rem')\n        .attr('font-family', 'sans-serif')\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"start\")\n        .selectAll(\"text\");\n\n    return ([date, data], transition, prev, next) => label = label\n        .data(data.slice(0, n), d => d.name)\n        .join(\n            enter => enter.append(\"text\")\n                .attr(\"transform\", d => `translate(0, ${y((prev.get(d) || d).rank)})`)\n                .attr(\"y\", y.bandwidth() - 3)\n                .attr(\"x\", 6)\n                .text(d => d.name)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .attr(\"font-weight\", \"bold\")\n                    .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)),\n            update => update,\n            exit => exit.transition(transition).remove()\n                .attr(\"transform\", d => `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`)\n        )\n        .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n        )\n\n};\n\nexport default Labels;\n\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/ValueLabels.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Bars.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/BarChart/Axis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Remark/Remark.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/utils.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/ValueLabels.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Labels.jsx",["406"],"import { n, x, y } from './constants';\n\nconst Labels = (svg) => {\n\n    let label = svg.select(\"#inter-barchart-label-g\")\n        .attr('font-style', 'normal')\n        .attr('font-weight', '600')\n        .attr('font-size', '0.7rem')\n        .attr('font-family', 'sans-serif')\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"start\")\n        .selectAll(\"text\");\n\n    return ([date, data], transition) => label = label\n        .data(data.slice(0, n), d => d.name)\n        .join(\n            enter => enter.append(\"text\")\n                .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n                .attr(\"y\", y.bandwidth() - 3)\n                .attr(\"x\", 6)\n                .text(d => d.name)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .attr(\"font-weight\", \"bold\")\n                    .attr(\"transform\", d => `translate(0,${y(d.rank)})`)),\n            update => update,\n            exit => exit.transition(transition).remove()\n                .attr(\"transform\", d => `translate(0,${y(d.rank)})`)\n        )\n        .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n        )\n\n};\n\nexport default Labels;\n\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Axis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/pc/components/Interaction/Bars.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeContent.jsx",["407"],"import React, {useEffect, useMemo, useCallback, useContext, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { IndexContext } from \"./MobileHome\";\nimport * as d3 from \"d3\";\nimport {UPDATE_INDEX} from \"../../../constants\";\nimport {descriptions, titles} from \"./texts/content-text\";\nimport MobileHomeSection from \"./components/MobileHomeSection\";\nimport PcHomeSection from \"../pc/components/PcHomeSection\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        // backgroundColor: \"#123456\",\n        width: \"100%\",\n        height: \"15vh\",\n        display: \"inline-block\",\n    },\n\n    wrapper: {\n        // backgroundColor: \"#654321\",\n        paddingLeft: \"1.5vw\",\n        paddingRight: \"1.5vw\",\n        marginBottom: \"300px\",\n    },\n\n    extra: {\n        height: \"300px\",\n    }\n}));\n\nlet container;\nlet sections;\nlet sectionPositions;\nlet currentIndex;\nlet containerStart;\n\n\nconst MobileHomeContent = ({callback}) => {\n\n    const classes = useStyles();\n\n    const { indexState, indexDispatch } = useContext(IndexContext);\n\n    function resize() {\n        // sectionPositions will be each sections\n        // starting position relative to the top\n        // of the first section.\n        sectionPositions = [];\n        var startPos;\n        sections.each(function (d, i) {\n            var top = this.getBoundingClientRect().top;\n            if (i === 0) {\n                startPos = top;\n            }\n            sectionPositions.push(top - startPos);\n        });\n        containerStart = container.node().getBoundingClientRect().top + window.pageYOffset;\n    }\n\n    function position() {\n        var pos = window.pageYOffset - 10 - containerStart;\n        var sectionIndex = d3.bisect(sectionPositions, pos);\n        sectionIndex = Math.min(sections.size() - 1, sectionIndex);\n\n        // console.log(\"position\")\n        // console.log(\"current index:\", currentIndex)\n        // console.log(\"section index:\", sectionIndex)\n        if (currentIndex !== sectionIndex) {\n            // @v4 you now `.call` the indexDispatch callback\n            handleScroll(sectionIndex);\n            currentIndex = sectionIndex;\n        }\n    }\n\n    const handleScroll = useCallback((index) => {\n        d3.selectAll('.step')\n            .style('opacity', function (d, i) { return i === index ? 1 : 0.1; });\n        indexDispatch({type: UPDATE_INDEX, data: index})\n    }, []);\n\n    useEffect(() => {\n        container = d3.select('#section-wrapper');\n        sections = d3.selectAll('.step');\n        sectionPositions = [];\n        currentIndex = -1;\n        containerStart = 0;\n    }, []);\n\n    useEffect(() => {\n        resize();\n        position();\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('mousewheel', position);\n        window.addEventListener('resize', resize);\n\n        return () => {\n            window.removeEventListener('mousewheel', position);\n            window.removeEventListener('resize', resize);\n        };\n    });\n\n    const sectionsContent = useMemo(() => {\n        return titles.filter((d, i) => {return i < titles.length - 1}).map((t, i) => <PcHomeSection key={i} title={t} descriptions={descriptions[i]} isInter=\"0\"/>)\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.wrapper} id=\"section-wrapper\">\n                {sectionsContent}\n                <MobileHomeSection key={titles.length - 1} title={titles[titles.length - 1]} descriptions={descriptions[titles.length - 1]} isInter=\"1\" callback={callback} />\n            </div>\n\n            <div className={classes.extra}> </div>\n        </div>\n    )\n};\n\nexport default MobileHomeContent;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeCanvas.jsx",["408","409","410","411","412"],"import React, {useEffect, useMemo, useCallback, useContext, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { IndexContext } from './MobileHome';\nimport { BarChart } from './components/BarChart'\nimport { Scatter } from \"./components/scatter\";\nimport MobileHomeFirst from \"./components/MobileHomeFirst\";\nimport InteractionBarChart from \"./components/Interaction/InteractionBarChart\";\nimport {\n    PRICE_BAR,\n    HAPPY_BAR,\n    ECO_SCATTER,\n    EDU_SCATTER,\n    ENV_SCATTER,\n    HLT_SCATTER,\n    HBY_SCATTER,\n    REL_SCATTER,\n    SAF_SCATTER,\n    INTERACTION,\n} from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n    canvasRoot: {\n        width: \"100%\",\n        display: \"inline-block\",\n        position: \"fixed\",\n\n        '&::before': {\n            content: '\"\"',\n            display: 'block',\n            paddingTop: '100%',\n        }\n    },\n\n    graphic: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        paddingLeft: \"1.5vw\",\n        paddingRight: \"1.5vw\",\n    },\n\n}));\n\nconst MobileHomeCanvas = ({weight}) => {\n\n    const classes = useStyles();\n\n    const { indexState, indexDispatch } = useContext(IndexContext);\n\n    return (\n        <div className={classes.canvasRoot}>\n            <div className={classes.graphic}>\n                {(function () {\n                    switch (indexState) {\n                        // 여기에 스크립트 순서에 맞게 보여주고 싶은 컴포넌트를 넣으시면 됩니다.\n                        case 0:\n                            // src/components/BarChart 안에 BarChart.jsx 로 찾아가주세요\n                            return (<MobileHomeFirst/>);\n\n                        case PRICE_BAR: // BarChart - House Price\n                        case HAPPY_BAR: // BarChart - House Price => Happiness\n                            return (<BarChart index={indexState}/>);\n\n                        case ECO_SCATTER: // 여가지수 - 집값\n                        case EDU_SCATTER: // 안전\n                        case ENV_SCATTER: // 교육\n                        case HLT_SCATTER: // 관계\n                        case HBY_SCATTER: //\n                        case REL_SCATTER:\n                        case SAF_SCATTER:\n                            return (<Scatter index={indexState}/>);\n                        case INTERACTION:\n                            return (<InteractionBarChart weight={weight}/>);\n                        default:\n                            return (<p></p>);\n                    }\n                })()}\n            </div>\n        </div>\n    )\n};\n\nexport default MobileHomeCanvas;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/texts/content-text.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/MobileHomeSection.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/MobileHomeFirst.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/InteractionBarChart.jsx",["413"],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/utils.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Axis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Bars.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/ValueLabels.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Labels.jsx",["414"],"import { n, x, y } from './constants';\n\nconst Labels = (svg) => {\n\n    let label = svg.select(\"#inter-barchart-label-g\")\n        .attr('font-style', 'normal')\n        .attr('font-weight', '600')\n        .attr('font-size', '0.6rem')\n        .attr('font-family', 'sans-serif')\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"start\")\n        .selectAll(\"text\");\n\n    return ([date, data], transition) => label = label\n        .data(data.slice(0, n), d => d.name)\n        .join(\n            enter => enter.append(\"text\")\n                .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n                .attr(\"y\", y.bandwidth() - 3)\n                .attr(\"x\", 6)\n                .text(d => d.name)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .attr(\"font-weight\", \"bold\")\n                    .attr(\"transform\", d => `translate(0,${y(d.rank)})`)),\n            update => update,\n            exit => exit.transition(transition).remove()\n                .attr(\"transform\", d => `translate(0,${y(d.rank)})`)\n        )\n        .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n        )\n\n};\n\nexport default Labels;\n\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/index.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/BarChart.jsx",["415","416","417"],"import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport * as d3 from 'd3';\nimport { makeStyles } from \"@material-ui/core\";\n\nimport Bars from './Bars';\nimport Axis from './Axis';\nimport Labels from './Labels';\nimport ValueLabels from './ValueLabels';\n\nimport {duration, x, margin } from './constants';\nimport { createDataset, createColorScale } from './utils';\nimport { priceData, happyData } from '../../../../../data';\nimport Remark from '../Remark/Remark';\n\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        // position: 'relative',\n        // width: `${width}`,\n        // height: `${height}`,\n    },\n\n    barSvg: {\n        display: 'block',\n        marginTop: `${margin.top}`,\n        marginBottom: `${margin.bottom}`,\n        marginLeft: `${margin.left}`,\n        marginRight: `${margin.right}`,\n        overflow: 'visible'\n    },\n\n    // unit: {\n    //     fontSize:'0.5rem',\n    //     float:'right',\n    //     transform:'translate(-15vw, -1vh)'\n    // }\n\n}));\n\nconst BarChart = ({index}) => {\n\n    const classes = useStyles();\n\n    const result = useMemo(() => createDataset(priceData, happyData),[]);\n    const color = useMemo(() => createColorScale(priceData), []);\n\n    useEffect(() => {\n        const svg = d3.select('#barchart-svg');\n\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        const updateBars = Bars(svg, index, color);\n        const updateAxis = Axis(svg);\n        const updateLabels = Labels(svg, index);\n        const updateValueLabels = ValueLabels(svg, index);\n\n        result.then((dataObject)=> {\n\n            const { keyFrames, prev, next } = dataObject;\n\n            if (index === 1) {\n                x.domain([0, keyFrames[0][1][0].value]);\n                console.log(\"x:\", x(179));\n\n                const priceKeyFrame = keyFrames[0];\n                updateAxis(priceKeyFrame, transition);\n                updateBars(priceKeyFrame, transition, prev, next);\n                updateLabels(priceKeyFrame, transition, prev, next);\n                updateValueLabels(priceKeyFrame, transition, prev, next);\n\n            } else {\n                x.domain([0, keyFrames[keyFrames.length-1][1][0].value]);\n\n                for (const keyframe of keyFrames) {\n                    updateAxis(keyframe, transition);\n                    updateBars(keyframe, transition, prev, next);\n                    updateLabels(keyframe, transition, prev, next);\n                    updateValueLabels(keyframe, transition, prev, next);\n\n                }\n            }\n        }, (err) => console.log(err))\n    }, [index]);\n\n    return (\n        <div className={classes.wrapper} id=\"barchart-wrapper\">\n            {/*<div className={classes.unit} id=\"barchart-unit\">{index === 1 ? '(단위: 천만원)' : '행복지수 (0~100)'}</div>*/}\n            <svg className={classes.barSvg} id=\"barchart-svg\">\n                <g id=\"barchart-axis-g\"></g>\n                <g id=\"barchart-bar-g\"></g>\n                <g id=\"barchart-label-g\"></g>\n                <g id=\"barchart-value-label-g\"></g>\n            </svg>\n            <Remark id=\"barchart-remark\"/>\n        </div>\n\n    )\n};\n\nexport default BarChart;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Scatter.jsx",["418","419","420","421","422"],"import React, {useEffect, useMemo} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport * as d3 from \"d3\";\n\nimport Xaxis from \"./Xaxis\";\nimport Yaxis from \"./Yaxis\";\nimport Circles from \"./Circles\";\nimport Texts from \"./Texts\";\n\nimport {y, margin, width, height, duration} from './constants';\nimport { createDataset, createColorScale } from './utils';\nimport { priceData } from '../../../../../data';\nimport RemarkTop from '../Remark/RemarkTop';\n\nimport {\n    ECO_SCATTER,\n    EDU_SCATTER,\n    ENV_SCATTER,\n    HBY_SCATTER,\n    HLT_SCATTER,\n    REL_SCATTER,\n    SAF_SCATTER\n} from \"../../../../../constants\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        position: 'absolute',\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n    },\n\n    scatterSvg : {\n        width: `${width + margin.left + margin.right}px`,\n        height: `${height + margin.top + margin.bottom}px`,\n    },\n\n    unit: {\n        fontSize:'0.5rem',\n        transform:'translate(280px, 5px)'\n    },\n\n    x_unit: {\n        fontSize:'0.5rem',\n        float:'right',\n        transform:'translate(-40px, -380px)'\n    }\n\n}));\n\n\nconst Scatter = ({index}) => {\n\n    const classes = useStyles();\n\n    const result = useMemo(() => createDataset(priceData),[]);\n    const color = useMemo(() => createColorScale(priceData), []);\n\n    let getXUnit = useMemo(() => {\n        switch (index) {\n            case HLT_SCATTER:\n                return '건강 지수 (0~1)';\n            case SAF_SCATTER:\n                return '안전 지수 (0~1)';\n            case ENV_SCATTER:\n                return '환경 지수 (0~1)';\n            case ECO_SCATTER:\n                return '경제 지수 (0~1)';\n            case EDU_SCATTER:\n                return '교육 지수 (0~1)';\n            case REL_SCATTER:\n                return '관계 지수 (0~1)';\n            case HBY_SCATTER:\n                return '여가 지수 (0~1)';\n        }\n    }, [index]);\n\n    useEffect(() => {\n\n        const svg = d3.select('svg#scatter-svg');\n\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        result.then((dataObject) => {\n\n            y.domain([dataObject.priceMin, dataObject.priceMax]);\n\n            const updateXaxis = Xaxis(svg);\n            const updateYaxis = Yaxis(svg);\n            const updateCircles = Circles(svg, color);\n            // const updateTexts = Texts(svg);\n\n            let indexData = [];\n            switch (index) {\n                case ECO_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.eco}});\n                    break;\n                case EDU_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.edu}});\n                    break;\n                case ENV_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.env}});\n                    break;\n                case HLT_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.health}});\n                    break;\n                case HBY_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.hobby}});\n                    break;\n                case REL_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.relation}});\n                    break;\n                case SAF_SCATTER:\n                    Object.values(dataObject.data).forEach((v, i) => {indexData[i] = {name: v.name, price: v.price, value: v.safe}});\n                    break;\n            }\n            updateXaxis(null, transition);\n            updateYaxis(null, transition);\n            updateCircles(indexData, transition);\n            // updateTexts(indexData, transition);\n        });\n    }, [index]);\n\n    return (\n        <div className={classes.wrapper} id=\"scatter-wrapper\">\n            {/*<div className={classes.unit} id=\"scatter-unit\">(단위: 천만원)</div>*/}\n            <svg className={classes.scatterSvg} id=\"scatter-svg\">\n                <g id=\"scatter-x-axis-g\"></g>\n                <g id=\"scatter-y-axis-g\"></g>\n                <g id=\"scatter-circles-g\"></g>\n                {/*<g id=\"scatter-texts-g\"></g>*/}\n            </svg>\n            {/*<div className={classes.x_unit} id=\"scatter-x-unit\">{getXUnit}</div>*/}\n            <RemarkTop/>\n        </div>\n\n    )\n};\n\nexport default Scatter;\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Remark/Remark.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/utils.js",["423"],"import * as d3 from 'd3';\nimport { n, k } from './constants';\n\nexport const createDataset = async (priceData, happyData) => {\n\n    // Bar Chart\n    const dateValues = await makeDateValues(priceData, happyData);\n    const names = await makeNames(priceData);\n    const ranks = await makeRanks(names);\n    const keyFrames = await makeKeyFrames(dateValues, ranks);\n    const nameFrames = await makeNameFrames(keyFrames);\n    const prev = await makePrev(nameFrames);\n    const next = await makeNext(nameFrames);\n\n    return ({\n        keyFrames: keyFrames,\n        prev: prev,\n        next: next,\n    });\n};\n\n/**\n * Related to Bar Chart\n */\n\nconst makeDateValues = (priceData, happyData) => {\n    const totalData = Array.from(d3.rollup(priceData, ([d]) => d.value, d => d.date, d => d.name)).concat(\n        Array.from(d3.rollup(happyData, ([d]) => d.value, d => d.date, d => d.name))\n    );\n\n    return(\n        totalData\n            .map(([date, data]) => [new Date(date), data])\n            .sort(([a], [b]) => d3.ascending(a, b))\n    );\n};\n\nconst makeNames = (priceData) => {\n    return new Set(priceData.map(d => d.name))\n};\n\nconst makeRanks = (names) => {\n    var rank = value => {\n        const data = Array.from(names, name => ({name, value: value(name)}));\n        data.sort((a, b) => d3.descending(a.value, b.value));\n        for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n        return data;\n    };\n    return rank;\n};\n\nconst makeKeyFrames = (dateValues, rank) => {\n\n    const keyframes = [];\n    let ka, a, kb, b;\n\n    for ([[ka, a], [kb, b]] of d3.pairs(dateValues)) {\n\n        for (let i = 0; i < k; ++i) {\n            const t = i / k;\n            keyframes.push([\n                new Date(ka * (1 - t) + kb * t),\n\n                rank(name => (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t)\n            ]);\n        }\n    }\n    keyframes.push([new Date(kb), rank(name => b.get(name) || 0)]);\n    return keyframes;\n};\n\nconst makeNameFrames = (keyframes) => {\n    return d3.groups(keyframes.flatMap(([, data]) => data), d => d.name)\n};\n\nconst makePrev = (nameFrames) => {\n    return new Map(nameFrames.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])))\n};\n\nconst makeNext = (nameFrames) => {\n    return new Map(nameFrames.flatMap(([, data]) => d3.pairs(data)))\n};\n\n\nexport var textTween = (a, b) => {\n    const formatNumber = d3.format(\".1f\");\n    const i = d3.interpolateNumber(a, b);\n\n    return function(t) {\n        this.textContent = formatNumber(i(t));\n    };\n};\n\nexport var createColorScale = (data) => {\n\n    const colors = ['#4770B3','#50AED3', '#9E9EA2','#fc9595', '#fe5050'];\n\n    const scale = d3.scaleOrdinal()\n        .domain(['area-1', 'area-2', 'area-3', 'area-4', 'area-5'])\n        .range(colors);\n\n    if (data.some(d => d.category !== undefined)) {\n        const categoryByName = new Map(data.map(d => [d.name, d.category]));\n        scale.domain(categoryByName.values());\n        return d => scale(categoryByName.get(d.name));\n    }\n\n    return d => scale(d.name);\n};\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/constants.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/utils.js",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Axis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Bars.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/Labels.jsx",["424"],"import { n, x, y } from './constants';\nimport { textTween } from \"./utils\";\n\nconst Labels = (svg, index) => {\n\n    let label = svg.select(\"#barchart-label-g\")\n        .attr('font-style', 'normal')\n        .attr('font-weight', '600')\n        .attr('font-size', '0.6rem')\n        .attr('font-family', 'sans-serif')\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"start\")\n        .selectAll(\"text\");\n\n    return ([date, data], transition, prev, next) => label = label\n        .data(data.slice(0, n), d => d.name)\n        .join(\n            enter => enter.append(\"text\")\n                .attr(\"transform\", d => `translate(0, ${y((prev.get(d) || d).rank)})`)\n                .attr(\"y\", y.bandwidth() - 3)\n                .attr(\"x\", 6)\n                .text(d => d.name)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .attr(\"font-weight\", \"bold\")\n                    .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)),\n            update => update,\n            exit => exit.transition(transition).remove()\n                .attr(\"transform\", d => `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`)\n        )\n        .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(0, ${y(d.rank)})`)\n        )\n\n};\n\nexport default Labels;\n\n\n","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/BarChart/ValueLabels.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Circles.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Yaxis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Texts.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scatter/Xaxis.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Interaction.jsx",["425","426","427","428","429","430","431"],"import React, {useContext, useReducer, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Sliders from './Sliders';\nimport Button from '@material-ui/core/Button';\nimport {IndexContext, InteractionContext} from \"../../MobileHome\";\nimport {UPDATE_INIT} from \"./constants\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {UPDATE_ECO, UPDATE_EDU, UPDATE_ENV, UPDATE_HBY, UPDATE_HLT, UPDATE_REL, UPDATE_SAF} from \"./constants\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n\nconst useStyles = makeStyles(theme => ({  // style 요소 선언\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    formWrapper: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: \"7%\",\n        '&& .MuiFormLabel-root': {\n            fontSize: '0.7em',\n        }\n    },\n\n    select: {\n        display: \"inline\",\n        height: \"20px\",\n        fontSize: \"0.5em\",\n        '&& .MuiOutlinedInput-input': {\n            padding: \"5px 3px\"\n        },\n        '&& .MuiSelect-iconOutlined' : {\n            right: '-10px'\n        },\n        '&& .MuiSvgIcon-root': {\n            width: '0.7em',\n            height: '0.7em',\n        }\n\n    },\n\n    buttonWrapper: {\n        position: 'relative',\n        right: '-2vw',\n\n\n        '&& .MuiButton-label': {\n            width: '80%',\n        },\n\n        '&& .MuiButton-text': {\n            padding: '0px 0px',\n        }\n    },\n\n    sendButton: {\n        fontFamily: 'NanumSquareRoundR',\n        fontSize: '0.5rem',\n        borderColor: '#4770B3',\n        backgroundColor: '#ffffff',\n        color: '#4770B3',\n    },\n\n}));\n\nconst Interaction = ({callback}) => {\n\n    const classes = useStyles();\n\n    const { weightState, weightDispatch } = useContext(InteractionContext);\n\n    const send = (event) => {\n        console.log(\"send\", weightState);\n        callback(weightState);\n    };\n\n    const initialize = (event) => {\n        weightDispatch({type: UPDATE_INIT, data: ''});\n    };\n\n    const getState = (type) => {\n        switch (type) {\n            case UPDATE_HLT:\n                return weightState.hlt;\n\n            case UPDATE_SAF:\n                return weightState.saf;\n\n            case UPDATE_ENV:\n                return weightState.env;\n\n            case UPDATE_ECO:\n                return weightState.eco;\n\n            case UPDATE_EDU:\n                return weightState.edu;\n\n            case UPDATE_REL:\n                return weightState.rel;\n\n            case UPDATE_HBY:\n                return weightState.hby;\n        }\n    };\n\n    const handleChange = (event, type) => {\n        weightDispatch({ type: type, data: event.target.value});\n    };\n\n    return (\n        <div className={classes.wrapper} id=\"slider-wrapper\">\n            <div className={classes.formWrapper}>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>건강</InputLabel>\n                    <Select className={classes.select}\n                        value={getState(UPDATE_HLT)}\n                        onChange={ (event) => handleChange(event, UPDATE_HLT)}\n                        label=\"건강\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>안전</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_SAF)}\n                        onChange={ (event) => handleChange(event, UPDATE_SAF)}\n                        label=\"안전\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>환경</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_ENV)}\n                        onChange={ (event) => handleChange(event, UPDATE_ENV)}\n                        label=\"환경\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>경제</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_ECO)}\n                        onChange={ (event) => handleChange(event, UPDATE_ECO)}\n                        label=\"경제\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>교육</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_EDU)}\n                        onChange={ (event) => handleChange(event, UPDATE_EDU)}\n                        label=\"교육\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>관계</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_REL)}\n                        onChange={ (event) => handleChange(event, UPDATE_REL)}\n                        label=\"관계\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>여가</InputLabel>\n                    <Select\n                        className={classes.select}\n                        value={getState(UPDATE_HBY)}\n                        onChange={ (event) => handleChange(event, UPDATE_HBY)}\n                        label=\"여가\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n                <div className={classes.buttonWrapper} id=\"slider-button-wrapper\">\n                    <Button\n                        className={classes.sendButton}\n                        onClick={send}\n                        onTouchStart={send}>\n                        적용하기\n                    </Button>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Interaction;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/Sliders.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Interaction/InputSlider.jsx",["432","433","434","435","436","437","438","439","440"],"import React, {useContext, useState} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport {InteractionContext} from \"../../MobileHome\";\nimport {UPDATE_ECO, UPDATE_EDU, UPDATE_ENV, UPDATE_HBY, UPDATE_HLT, UPDATE_REL, UPDATE_SAF} from \"./constants\";\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n\n    category: {\n        clear: 'both',\n        position: 'relative',\n        paddingBottom: '25px',\n        marginBottom: '25px',\n        borderBottom: '1px solid #ddd',\n        width: '100%',\n        height: '350',\n    },\n\n    section: {\n        position: 'relative',\n        float: 'left',\n        width: 220 + theme.spacing(3) * 3,\n        marginRight: '10px',\n    },\n\n    title: {\n        fontFamily: 'NanumSquareRoundR',\n        fontSize: '25px',\n        lineHeight: '21px',\n        color: '#333',\n        fontWeight: '700',\n        marginBottom: '10px',\n        display: 'block',\n    },\n\n    descriptionWrapper: {\n        width: '350px',\n        position: 'relative',\n        display: 'flex',\n    },\n\n    description: {\n        fontFamily: 'NanumSquareRoundR',\n        width: '90%',\n        fontSize: '13px',\n    },\n\n    subDescription: {\n        fontFamily: 'NanumSquareRoundR',\n        fontSize: '10px',\n        color: '#444448',\n    },\n\n    expandButton: {\n        position: 'relative',\n        width: '5%',\n        height: '10px',\n    },\n\n    wrapper: {\n        width: 200 + theme.spacing(3) * 3,\n        position: 'absolute',\n        float: 'right',\n        marginTop: '0',\n        marginLeft: '70px',\n        display: 'flex',\n        flexDirection: 'row',\n        paddingBottom: '5px',\n    },\n\n    slider: {\n        width: '86%',\n        marginRight: '20px',\n    },\n\n    sliderText: {\n        fontSize: '15px',\n        float: 'right',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        paddingTop: '5px',\n    }\n}));\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: '#4770B3',\n        height: 8,\n    },\n    thumb: {\n        height: 20,\n        width: 20,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n\n})(Slider);\n\nconst getTitle = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return '건강';\n\n        case UPDATE_SAF:\n            return '안전';\n\n        case UPDATE_ENV:\n            return '환경';\n\n        case UPDATE_ECO:\n            return '경제';\n\n        case UPDATE_EDU:\n            return '교육';\n\n        case UPDATE_REL:\n            return '관계';\n\n        case UPDATE_HBY:\n            return '여가';\n    }\n};\n\nconst getDescription = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return '좋은 신체 건강 상태를 유지하면서 평균기대수명까지 삶을 영위할 수 있을 것';\n\n        case UPDATE_SAF:\n            return '각종 폭력 및 위험(강도, 사고, 재난)에서 보호 받을 수 있으며 응급진료 접근성이 있을 것';\n\n        case UPDATE_ENV:\n            return '맑고 풍족한 물과 깨끗한 공기를 마시며  살아 갈 수 있을 것';\n\n        case UPDATE_ECO:\n            return '직업을 가지고 빈곤하지 않게  살아 갈 수 있을 것';\n\n        case UPDATE_EDU:\n            return '이성적으로 사고하고 판단할 수 있고 종교, 문학,  음악 등 \\b\\b\\b\\b 원하는 것을 배우고 표현하는데  있어서 제약이 없을 것';\n\n        case UPDATE_REL:\n            return '다른 사람들에게 신뢰받고 존중받으며, 이웃, 나아가  조직 \\b\\b 및 사회 내 사람들과 함께 상호작용할 수 있을 것';\n\n        case UPDATE_HBY:\n            return '일상에서 여유와 웃음을 갖고 문화적 삶을 향유하며 즐거운 시간을 보낼 수 있을 것';\n    }\n};\n\nconst getSubDescription = (type) => {\n    switch (type) {\n        case UPDATE_HLT:\n            return ['주관적 건강수준 인지율',\n                '인구 십만명당 정신건강증진기관 수',\n                '인구 천명당 의료기관 종사 의사수',\n                '건강생활실천율',\n                '인구 천명당 의료기관병상수'];\n\n        case UPDATE_SAF:\n            return ['사회 안전에 대한 인식',\n            '인구 천명당 cctv 대수',\n            '인구 십만명당 응급의료기관 및 응급실 운영기관수',\n            '단위면적당 지역경찰관서 수',\n            '지역안전등급 현황 중 \\'교통사고 및 화재\\''];\n\n        case UPDATE_ENV:\n            return [\n                '환경체감도',\n            '인구 천명당 1일 산업폐수 방류량',\n            '도시지역 중 \\'녹지지역 비율\\'',\n            '미세먼지(PM2.5)',\n            '주민 1인당 생활폐기물배출량'];\n\n        case UPDATE_ECO:\n            return [\n                '1인당 지역내총생산(GRDP)',\n                '인구 천명당 사업체수',\n                '인구 천명당 종사자수',\n                '국민기초생활보장 수급자비율',\n                '종사자 천명당 영세자영업자 수'\n            ];\n\n        case UPDATE_EDU:\n            return [\n                '학업성취도(기초학력미달)',\n            '교원 1인당 학생수',\n            '영유아 천명당 보육시설 수',\n            '인구 십만명당 학교수',\n            '인구 천명당 사설학원수'];\n\n        case UPDATE_REL:\n            return [\n                '인구 십만명당 자살률',\n            '1인가구(독거노인 제외) 비율 a)',\n            '독거노인가구 비율',\n            '인구 십만명당 사회적기업 수',\n            '가족관계 만족도'];\n\n        case UPDATE_HBY:\n            return [\n                '여가활용 만족도',\n            '노인 천명당 노인여가복지시설 수',\n            '인구 십만명당 도서관 수',\n            '인구 십만명당 문화기반시설 수',\n            '인구 천명당 체육관련 여가시설 수'];\n    }\n};\n\nconst InputSlider = ({selection}) => {\n\n    const classes = useStyles();\n\n    const {weightState, weightDispatch} = useContext(InteractionContext);\n\n    const [visibility, setVisibility] = useState(false);\n\n    const handleVisibility = (e) => {\n        setVisibility(!visibility)\n    };\n\n    const getState = (type) => {\n        switch (type) {\n            case UPDATE_HLT:\n                return weightState.hlt;\n\n            case UPDATE_SAF:\n                return weightState.saf;\n\n            case UPDATE_ENV:\n                return weightState.env;\n\n            case UPDATE_ECO:\n                return weightState.eco;\n\n            case UPDATE_EDU:\n                return weightState.edu;\n\n            case UPDATE_REL:\n                return weightState.rel;\n\n            case UPDATE_HBY:\n                return weightState.hby;\n        }\n    };\n\n    const handleSliderChange = (event, newValue, type) => {\n        weightDispatch({ type: type, data: newValue})\n    };\n\n    return (\n        <div className={classes.category}>\n            <div className={classes.section}>\n                <div\n                    className={classes.title}>\n                    {getTitle(selection)}\n                </div>\n\n                <div className={classes.descriptionWrapper}>\n                    <div className={classes.description}>\n                        {getDescription(selection)}\n                    </div>\n\n                    <IconButton className={classes.expandButton}\n                        onClick={handleVisibility}>\n                        <ExpandMoreIcon color='#444448'/>\n                    </IconButton>\n\n                </div>\n\n                { visibility ?\n                    <div className={classes.subDescription}>\n                        <p>{getSubDescription(selection)[0]}</p>\n                        <p>{getSubDescription(selection)[1]}</p>\n                        <p>{getSubDescription(selection)[2]}</p>\n                        <p>{getSubDescription(selection)[3]}</p>\n                        <p>{getSubDescription(selection)[4]}</p>\n                    </div> :\n                    null\n                }\n            </div>\n\n            <div className={classes.wrapper}>\n\n                <PrettoSlider\n                    className={classes.slider}\n                    value={typeof getState(selection) === 'number' ? getState(selection) : 0}\n                    onChange={(event, value) => handleSliderChange(event, value, selection)}\n                    valueLabelDisplay=\"off\"\n                    aria-label=\"pretto slider\"\n                    aria-valuemin={0}\n                    aria-valuemax={10}\n                    min={0}\n                    max={10}\n                    step={1}\n                />\n                <Typography className={classes.sliderText}>\n                    {typeof getState(selection) === 'number' ? getState(selection) : 0}\n                </Typography>\n            </div>\n        </div>\n    )\n};\n\nexport default InputSlider;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/MobileHomeScroller.jsx",["441","442","443","444"],"import React, {useEffect, useMemo, useCallback, useContext, useState} from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { IndexContext } from \"./MobileHome\";\nimport * as d3 from \"d3\";\nimport {UPDATE_INDEX} from \"../../../constants\";\nimport {titles} from \"./texts/content-text\";\nimport ScrollCircle from \"./components/scrollCircle/ScrollCircle\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: \"3vw\",\n        height: \"auto\",\n\n    },\n\n    wrapper: {\n    },\n\n    extra: {\n        height: \"70vh\",\n    }\n}));\n\nlet container;\nlet sections;\nlet sectionPositions;\nlet currentIndex;\nlet containerStart;\n\n\nconst MobileHomeScroller = ({callback}) => {\n\n    const classes = useStyles();\n\n    const { indexState, indexDispatch } = useContext(IndexContext);\n\n    function resize() {\n        // sectionPositions will be each sections starting position relative to the top\n        // of the first section.\n        sectionPositions = [];\n\n        let startPos;\n\n        sections.each(function (d, i) {\n            const top = this.getBoundingClientRect().top;\n\n            if (i === 0) {\n                startPos = top;\n            }\n            sectionPositions.push(top - startPos);\n        });\n        containerStart = container.node().getBoundingClientRect().top + window.pageYOffset;\n    }\n\n    function position() {\n        var pos = window.pageYOffset - containerStart;\n        var sectionIndex = d3.bisect(sectionPositions, pos);\n        sectionIndex = Math.min(sections.size() - 1, sectionIndex);\n\n        if (currentIndex !== sectionIndex) {\n            handleScroll(sectionIndex);\n            currentIndex = sectionIndex;\n        }\n    }\n\n    const handleScroll = useCallback((index) => {\n        d3.selectAll('.scroll-circles')\n            .style('opacity', function (d, i) { return i === index ? 0.8 : 0.1; });\n        indexDispatch({type: UPDATE_INDEX, data: index})\n    }, []);\n\n    useEffect(() => {\n        container = d3.select('#scroll-wrapper');\n        sections = d3.selectAll('.scroll-circles');\n        sectionPositions = [];\n        currentIndex = -1;\n        containerStart = 0;\n    }, []);\n\n    useEffect(() => {\n        resize();\n        position();\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('scroll', position);\n        window.addEventListener('resize', resize);\n\n        return () => {\n            window.removeEventListener('scroll', position);\n            window.removeEventListener('resize', resize);\n        };\n    });\n\n    const sectionCircles = useMemo(() => {\n        return titles.map((t, i) => <ScrollCircle key={i} />)\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.wrapper} id=\"scroll-wrapper\">\n                {sectionCircles}\n            </div>\n\n            <div className={classes.extra}> </div>\n        </div>\n    )\n};\n\nexport default MobileHomeScroller;","/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/Remark/RemarkTop.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Home/mobile/components/scrollCircle/ScrollCircle.jsx",[],"/Users/hyunjun/WebstormProjects/happy-apartment-web-front/src/pages/Welcome/mobile/components/TextBtn.jsx",[],{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","severity":1,"message":"450","line":79,"column":13,"nodeType":"451","endLine":79,"endColumn":94},{"ruleId":"449","severity":1,"message":"450","line":81,"column":13,"nodeType":"451","endLine":81,"endColumn":48},{"ruleId":"452","severity":1,"message":"453","line":127,"column":36,"nodeType":"454","endLine":127,"endColumn":47},{"ruleId":"452","severity":1,"message":"453","line":142,"column":36,"nodeType":"454","endLine":142,"endColumn":47},{"ruleId":"449","severity":1,"message":"450","line":79,"column":13,"nodeType":"451","endLine":79,"endColumn":94},{"ruleId":"449","severity":1,"message":"450","line":81,"column":13,"nodeType":"451","endLine":81,"endColumn":48},{"ruleId":"455","severity":1,"message":"456","line":1,"column":61,"nodeType":"454","messageId":"457","endLine":1,"endColumn":69},{"ruleId":"455","severity":1,"message":"458","line":5,"column":23,"nodeType":"454","messageId":"457","endLine":5,"endColumn":41},{"ruleId":"455","severity":1,"message":"459","line":8,"column":9,"nodeType":"454","messageId":"457","endLine":8,"endColumn":20},{"ruleId":"455","severity":1,"message":"460","line":9,"column":9,"nodeType":"454","messageId":"457","endLine":9,"endColumn":20},{"ruleId":"455","severity":1,"message":"461","line":43,"column":13,"nodeType":"454","messageId":"457","endLine":43,"endColumn":23},{"ruleId":"452","severity":1,"message":"462","line":80,"column":8,"nodeType":"463","endLine":80,"endColumn":10,"suggestions":"464"},{"ruleId":"452","severity":1,"message":"465","line":93,"column":8,"nodeType":"463","endLine":93,"endColumn":10,"suggestions":"466"},{"ruleId":"455","severity":1,"message":"467","line":48,"column":25,"nodeType":"454","messageId":"457","endLine":48,"endColumn":38},{"ruleId":"452","severity":1,"message":"468","line":69,"column":8,"nodeType":"463","endLine":69,"endColumn":16,"suggestions":"469"},{"ruleId":"455","severity":1,"message":"470","line":1,"column":28,"nodeType":"454","messageId":"457","endLine":1,"endColumn":38},{"ruleId":"455","severity":1,"message":"471","line":2,"column":13,"nodeType":"454","messageId":"457","endLine":2,"endColumn":15},{"ruleId":"455","severity":1,"message":"472","line":6,"column":9,"nodeType":"454","messageId":"457","endLine":6,"endColumn":21},{"ruleId":"452","severity":1,"message":"468","line":80,"column":8,"nodeType":"463","endLine":80,"endColumn":15,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":58,"column":9,"nodeType":"476","messageId":"477","endLine":73,"endColumn":10},{"ruleId":"474","severity":1,"message":"475","line":94,"column":13,"nodeType":"476","messageId":"477","endLine":116,"endColumn":14},{"ruleId":"452","severity":1,"message":"468","line":122,"column":8,"nodeType":"463","endLine":122,"endColumn":15,"suggestions":"478"},{"ruleId":"474","severity":1,"message":"475","line":118,"column":5,"nodeType":"476","messageId":"477","endLine":139,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":143,"column":5,"nodeType":"476","messageId":"477","endLine":170,"endColumn":6},{"ruleId":"479","severity":1,"message":"480","line":148,"column":20,"nodeType":"481","messageId":"482","endLine":149,"endColumn":28},{"ruleId":"479","severity":1,"message":"480","line":152,"column":20,"nodeType":"481","messageId":"482","endLine":153,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":156,"column":20,"nodeType":"481","messageId":"482","endLine":157,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":160,"column":20,"nodeType":"481","messageId":"482","endLine":162,"endColumn":15},{"ruleId":"479","severity":1,"message":"480","line":165,"column":20,"nodeType":"481","messageId":"482","endLine":166,"endColumn":37},{"ruleId":"474","severity":1,"message":"475","line":174,"column":5,"nodeType":"476","messageId":"477","endLine":229,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":245,"column":9,"nodeType":"476","messageId":"477","endLine":266,"endColumn":10},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"486","endLine":64,"endColumn":83},{"ruleId":"455","severity":1,"message":"487","line":2,"column":10,"nodeType":"454","messageId":"457","endLine":2,"endColumn":19},{"ruleId":"455","severity":1,"message":"488","line":1,"column":13,"nodeType":"454","messageId":"457","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"467","line":26,"column":25,"nodeType":"454","messageId":"457","endLine":26,"endColumn":38},{"ruleId":"455","severity":1,"message":"489","line":1,"column":16,"nodeType":"454","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"455","severity":1,"message":"490","line":1,"column":27,"nodeType":"454","messageId":"457","endLine":1,"endColumn":34},{"ruleId":"455","severity":1,"message":"491","line":1,"column":36,"nodeType":"454","messageId":"457","endLine":1,"endColumn":47},{"ruleId":"455","severity":1,"message":"456","line":1,"column":61,"nodeType":"454","messageId":"457","endLine":1,"endColumn":69},{"ruleId":"455","severity":1,"message":"467","line":50,"column":25,"nodeType":"454","messageId":"457","endLine":50,"endColumn":38},{"ruleId":"452","severity":1,"message":"468","line":68,"column":8,"nodeType":"463","endLine":68,"endColumn":16,"suggestions":"492"},{"ruleId":"455","severity":1,"message":"488","line":1,"column":13,"nodeType":"454","messageId":"457","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"491","line":1,"column":16,"nodeType":"454","messageId":"457","endLine":1,"endColumn":27},{"ruleId":"455","severity":1,"message":"456","line":1,"column":49,"nodeType":"454","messageId":"457","endLine":1,"endColumn":57},{"ruleId":"452","severity":1,"message":"468","line":85,"column":8,"nodeType":"463","endLine":85,"endColumn":15,"suggestions":"493"},{"ruleId":"455","severity":1,"message":"494","line":8,"column":8,"nodeType":"454","messageId":"457","endLine":8,"endColumn":13},{"ruleId":"455","severity":1,"message":"495","line":59,"column":9,"nodeType":"454","messageId":"457","endLine":59,"endColumn":17},{"ruleId":"474","severity":1,"message":"475","line":60,"column":9,"nodeType":"476","messageId":"477","endLine":75,"endColumn":10},{"ruleId":"474","severity":1,"message":"475","line":96,"column":13,"nodeType":"476","messageId":"477","endLine":118,"endColumn":14},{"ruleId":"452","severity":1,"message":"468","line":124,"column":8,"nodeType":"463","endLine":124,"endColumn":15,"suggestions":"496"},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"486","endLine":64,"endColumn":83},{"ruleId":"455","severity":1,"message":"487","line":2,"column":10,"nodeType":"454","messageId":"457","endLine":2,"endColumn":19},{"ruleId":"455","severity":1,"message":"470","line":1,"column":28,"nodeType":"454","messageId":"457","endLine":1,"endColumn":38},{"ruleId":"455","severity":1,"message":"456","line":1,"column":40,"nodeType":"454","messageId":"457","endLine":1,"endColumn":48},{"ruleId":"455","severity":1,"message":"471","line":2,"column":13,"nodeType":"454","messageId":"457","endLine":2,"endColumn":15},{"ruleId":"455","severity":1,"message":"497","line":4,"column":8,"nodeType":"454","messageId":"457","endLine":4,"endColumn":15},{"ruleId":"455","severity":1,"message":"472","line":6,"column":9,"nodeType":"454","messageId":"457","endLine":6,"endColumn":21},{"ruleId":"455","severity":1,"message":"498","line":86,"column":11,"nodeType":"454","messageId":"457","endLine":86,"endColumn":21},{"ruleId":"474","severity":1,"message":"475","line":91,"column":9,"nodeType":"476","messageId":"477","endLine":112,"endColumn":10},{"ruleId":"474","severity":1,"message":"475","line":117,"column":5,"nodeType":"476","messageId":"477","endLine":138,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":142,"column":5,"nodeType":"476","messageId":"477","endLine":169,"endColumn":6},{"ruleId":"479","severity":1,"message":"480","line":147,"column":20,"nodeType":"481","messageId":"482","endLine":148,"endColumn":28},{"ruleId":"479","severity":1,"message":"480","line":151,"column":20,"nodeType":"481","messageId":"482","endLine":152,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":155,"column":20,"nodeType":"481","messageId":"482","endLine":156,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":159,"column":20,"nodeType":"481","messageId":"482","endLine":161,"endColumn":15},{"ruleId":"479","severity":1,"message":"480","line":164,"column":20,"nodeType":"481","messageId":"482","endLine":165,"endColumn":37},{"ruleId":"474","severity":1,"message":"475","line":173,"column":5,"nodeType":"476","messageId":"477","endLine":228,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":244,"column":9,"nodeType":"476","messageId":"477","endLine":265,"endColumn":10},{"ruleId":"455","severity":1,"message":"456","line":1,"column":61,"nodeType":"454","messageId":"457","endLine":1,"endColumn":69},{"ruleId":"455","severity":1,"message":"461","line":36,"column":13,"nodeType":"454","messageId":"457","endLine":36,"endColumn":23},{"ruleId":"452","severity":1,"message":"462","line":71,"column":8,"nodeType":"463","endLine":71,"endColumn":10,"suggestions":"499"},{"ruleId":"452","severity":1,"message":"465","line":84,"column":8,"nodeType":"463","endLine":84,"endColumn":10,"suggestions":"500"},"no-native-reassign",["501"],"no-negated-in-lhs",["502"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'useState' is defined but never used.","unusedVar","'InteractionContext' is defined but never used.","'Interaction' is defined but never used.","'UPDATE_INIT' is defined but never used.","'indexState' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'indexDispatch'. Either include it or remove the dependency array.","ArrayExpression",["503"],"React Hook useEffect has a missing dependency: 'position'. Either include it or remove the dependency array.",["504"],"'indexDispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'color' and 'result'. Either include them or remove the dependency array.",["505"],"'useReducer' is defined but never used.","'d3' is defined but never used.","'IndexContext' is defined but never used.",["506"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["507"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a', 'b'.","ArrowFunctionExpression","unsafeRefs","'textTween' is defined but never used.","'x' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.",["508"],["509"],"'Texts' is defined but never used.","'getXUnit' is assigned a value but never used.",["510"],"'Sliders' is defined but never used.","'initialize' is assigned a value but never used.",["511"],["512"],"no-global-assign","no-unsafe-negation",{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"519","fix":"521"},{"desc":"517","fix":"522"},{"desc":"519","fix":"523"},{"desc":"519","fix":"524"},{"desc":"513","fix":"525"},{"desc":"515","fix":"526"},"Update the dependencies array to be: [indexDispatch]",{"range":"527","text":"528"},"Update the dependencies array to be: [position]",{"range":"529","text":"530"},"Update the dependencies array to be: [color, result, weight]",{"range":"531","text":"532"},"Update the dependencies array to be: [color, index, result]",{"range":"533","text":"534"},{"range":"535","text":"534"},{"range":"536","text":"532"},{"range":"537","text":"534"},{"range":"538","text":"534"},{"range":"539","text":"528"},{"range":"540","text":"530"},[2540,2542],"[indexDispatch]",[2827,2829],"[position]",[1951,1959],"[color, result, weight]",[2342,2349],"[color, index, result]",[3957,3964],[1939,1947],[2630,2637],[4031,4038],[1919,1921],[2215,2217]]